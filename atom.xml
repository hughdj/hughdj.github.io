<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hughdj.github.io/"/>
  <updated>2019-08-23T06:31:57.895Z</updated>
  <id>https://hughdj.github.io/</id>
  
  <author>
    <name>hughdj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>开源免费的轻量音频视频剪辑工具lossless-cut上手</title>
    <link href="https://hughdj.github.io/2019/08/23/%E5%BC%80%E6%BA%90%E5%85%8D%E8%B4%B9%E7%9A%84%E8%BD%BB%E9%87%8F%E9%9F%B3%E9%A2%91%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91%E5%B7%A5%E5%85%B7lossless-cut%E4%B8%8A%E6%89%8B/"/>
    <id>https://hughdj.github.io/2019/08/23/开源免费的轻量音频视频剪辑工具lossless-cut上手/</id>
    <published>2019-08-23T06:31:05.000Z</published>
    <updated>2019-08-23T06:31:57.895Z</updated>
    
    <content type="html"><![CDATA[<p>当小明来找我帮他做一个视频剪辑的时候，我是有一点抗拒的。第一是我并没有许多专业的技巧，我只是学习过某个剪辑工具一段时间，当时我也是为了做一个项目Demo；第二是我真的害怕打开装在我13寸笔记本上的那些剪辑工具（当然必须有Adobe全家桶）。于是我和朋友小明说，”我可能没办法帮你做，第一我快忘了怎么用剪辑工具了，第二我机器根本跑不动的。” 事后我十分后悔说了“可能“两个字，因为他捕捉了这一点，并说要帮我带早餐，我为了贪图几分钟的睡眠时间还是帮他做了。成年人的友情就是这么单纯简单！</p><a id="more"></a><p>我花了2分钟打开了PR（Adobe剪辑器），简单回忆了一下剪辑流程，花了几分钟把窗口调整到舒服的位置，一切准备就绪了。小明在一旁一直在说，”牛x啊，兄弟，什么时候学会的这东西“。那一刻我得到了一丝丝虚荣心的满足，但是我还是十分低调的回了一句，你要怎么剪。他拿出了一个U盘，说道：”这是我给静静做的恋爱一周年视频，嘿嘿，怪不好意思的，用xxx做的，做完发现片头片尾有水印，这哪行啊！太low了！你帮我把前后片头都剪掉“。我，”……“。于是我花了几秒钟剪掉了片头片尾，然后渲染了一个长达30分钟的视频，耗时一个小时。。。。那是我扪心自问，难道没有一个免费轻量化的剪辑工具嘛！说着说着我打开了浏览器，发现了lossless-cut！</p><h5 id="lossless-cut"><a href="#lossless-cut" class="headerlink" title="lossless-cut"></a><strong>lossless-cut</strong></h5><blockquote><p>Simple and ultra fast cross platform tool for lossless trimming/cutting of video and audio files. Great for saving space by rough cutting your large video files taken from a video camera, GoPro, drone, etc. It lets you quickly extract the good parts from your videos and discard many gigabytes of data without doing a slow re- encode and thereby losing quality. It extremely fast because it does an almost direct data copy. It uses the awesome ffmpeg (included) for doing the grunt work.</p></blockquote><p><strong>简介（机翻）</strong>：</p><p><u>简单而超快速的跨平台工具，用于无损修剪/剪切视频和音频文件。通过粗略剪切摄像机、GoPro、无人机等拍摄的大型视频文件，节省空间。它可以让你快速从视频中提取好的部分，丢弃数十亿字节的数据，而不需要进行缓慢的重新编码，从而降低质量。它速度极快，因为它几乎可以直接复制数据。它使用令人敬畏的ffmpeg(包括)来做繁重的工作。</u></p><p><strong>特点（机翻）</strong>：</p><ul><li>无损剪切普通视频和音频格式</li><li>无损重新合并选定的片段(用于剪切商业广告等)</li><li>任意文件的无损合并(使用相同的编解码器)</li><li>从文件中无损提取所有数据流(视频、音频、字幕)</li><li>以JPEG/PNG格式从视频中拍摄全分辨率快照</li><li>手动输入切割点范围</li><li>可以包括两个以上的流或删除音轨(可选)</li><li>应用时间码偏移</li><li>更改视频中的旋转/方向元数据。非常适合旋转出现错误的电话视频，而无需对视频进行重新编码。</li></ul><p><strong>支持平台与格式：</strong></p><blockquote><p>windows\macos\linux平台支持</p></blockquote><blockquote><p>MP4, MOV, WebM, MKV, OGG, WAV, MP3, AAC, H264, Theora, VP8, VP9<br>For more information about supported formats / codecs, see <a href="https://www.chromium.org/audio-video" target="_blank" rel="noopener">https://www.chromium.org/audio-video</a>.</p></blockquote><h5 id="工具上手"><a href="#工具上手" class="headerlink" title="工具上手"></a>工具上手</h5><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/1281eb1551ecfd8837271912def230a5.jpeg" alt="screenshot.jpeg"></p><ol><li>ctrl+o 打开待编辑视频</li><li>空格Space播放\暂停预览</li><li>鼠标拖动查看时间轴</li><li>定义输出的头尾，去掉原视频的头尾</li></ol><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/daed18b387d98856f26449bccd9c06e2.jpeg" alt="screenshot.jpeg"></p><ol start="5"><li>开始！（出视频<strong>实测5秒</strong>，没想到这么快，截图都没来得及）</li><li>继续尝试多片段分割（<strong>实测23秒</strong>，还是不错的！）</li></ol><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/cfabf146da4b5e78ba6c848b419cdb7c.jpeg" alt="screenshot.jpeg"></p><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>十分好用的轻量级免费编辑工具！我已经很久没有打开我的PR了~</p><p>另外，Github首页提供了常用说明，非常实用。（快捷键也太方便了）</p><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/95aee2d946c3669ab0f7438c9942b9aa.jpeg" alt="screenshot.jpeg"></p><p>当前长期是有人更新维护的（太不容易了）</p><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/fbf0293b0c6db5d9835319e39a468c01.jpeg" alt="screenshot.jpeg"></p><p>有需求的同志们，可以下载试用！</p><p>Release安装包：<a href="https://github.com/mifi/lossless-cut/releases" target="_blank" rel="noopener">https://github.com/mifi/lossless-cut/releases</a></p><p>github主页：<a href="https://github.com/mifi/lossless-cut" target="_blank" rel="noopener">https://github.com/mifi/lossless-cut</a></p><h5 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h5><p>感谢大家的阅读，如果您觉得我的文章对您有点帮助，不妨扫描下方二维码关注我<del>如果您又觉得我的文章对身边的人有帮助，不妨右下角点个在看</del></p><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/_20190709084152.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当小明来找我帮他做一个视频剪辑的时候，我是有一点抗拒的。第一是我并没有许多专业的技巧，我只是学习过某个剪辑工具一段时间，当时我也是为了做一个项目Demo；第二是我真的害怕打开装在我13寸笔记本上的那些剪辑工具（当然必须有Adobe全家桶）。于是我和朋友小明说，”我可能没办法帮你做，第一我快忘了怎么用剪辑工具了，第二我机器根本跑不动的。” 事后我十分后悔说了“可能“两个字，因为他捕捉了这一点，并说要帮我带早餐，我为了贪图几分钟的睡眠时间还是帮他做了。成年人的友情就是这么单纯简单！&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>模型需要优化？来看看这些已为你做好的开源优化框架</title>
    <link href="https://hughdj.github.io/2019/08/23/%E6%A8%A1%E5%9E%8B%E9%9C%80%E8%A6%81%E4%BC%98%E5%8C%96%EF%BC%9F%E6%9D%A5%E7%9C%8B%E7%9C%8B%E8%BF%99%E4%BA%9B%E5%B7%B2%E4%B8%BA%E4%BD%A0%E5%81%9A%E5%A5%BD%E7%9A%84%E5%BC%80%E6%BA%90%E4%BC%98%E5%8C%96%E6%A1%86%E6%9E%B6/"/>
    <id>https://hughdj.github.io/2019/08/23/模型需要优化？来看看这些已为你做好的开源优化框架/</id>
    <published>2019-08-23T03:42:05.000Z</published>
    <updated>2019-08-23T03:44:13.437Z</updated>
    
    <content type="html"><![CDATA[<p>优化无处不在，无论你是不是从事优化研究，你都或多或少地面临研究模型优化问题。解决优化问题的算法被统称为优化算法，但优化算法的类型是非常多的。在机器学习中，大家都十分熟悉梯度下降法，在物理模型优化中，大家都熟悉牛顿法，而这些都是较为传统的优化算法了。随着模型越来越复杂，优化目标越来越多，传统算法都慢慢地无法胜任复杂优化任务，更为智能的优化方法也就应运而生了。其中有一类是进化优化算法，这类算法的思想来源是自然界的“优胜劣汰”法则，通过不停地保留好的个体最终达到优化目的。IEEE下有<a href="http://www.baidu.com/link?url=GcMzP38YZLrf4w9TH_A4en-NdcdwFkA02XrGCUyJL8Qid9Byi40HYvkku_JNBz49sji9MqeKovfBylcYCZm7v5jGX4Grv1RsYlA5G8fh4iPnaxI9daErly9bn10roRU0" target="_blank" rel="noopener"><em>IEEE</em> Transactions on Evolutionary Computation</a>是为这类算法而开的。进化算法中最为人熟知的应该是遗传算法了，经过几十年的发展，现在进化算法家族已经枝繁叶茂了，重要的是越来越多的领域都开始使用这类算法解决一些实际难题了。关于遗传算法的通俗解释，大家可参阅科学松鼠会的这篇文章：<a href="https://songshuhui.net/archives/10462。而其余的进化类算法框架几乎与遗传算法相一致，有兴趣的可以查找更多的文献了解。" target="_blank" rel="noopener">https://songshuhui.net/archives/10462。而其余的进化类算法框架几乎与遗传算法相一致，有兴趣的可以查找更多的文献了解。</a></p><p>算法是好，但初学者要如何尽快地用它来解决自己的优化模型呢，毕竟不能都去研究实现这类算法。为了帮助读者更快地能够使用算法，本文将介绍一些比较流行的优化框架。使用优化框架，你不用再管算法如何实现，而只需要选择算法、编制优化问题，编译运行，相信会大大地降低优化研究的门槛。</p><h5 id="PlatEMO"><a href="#PlatEMO" class="headerlink" title="PlatEMO"></a>PlatEMO</h5><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/c63f93519df863a490727ac311b57f95.jpeg" alt="PlatEMO Logo"></p><p>PlatEMO是安徽大学BIMK团队（生物智能与知识发现研究所Institute of Bio-inspired Intelligence and Mining Knowledge）开发的一款以进化算法为基础的多目标优化框架库，这个库是由田野同学、程然博士、张兴义老师和金耀初老师开发。PlatEMO使用<strong>Matlab</strong>平台搭建而成，并带有GUI界面，是一款易用性、功能性和扩展性俱佳的优化工具。当前，该工具可在Windows、Linux双平台稳定使用了，对于Macos平台，开发人员还在验证测试中。对于Matlab熟悉的同学相信可以很快上手部署自己的优化模型使用PlatEMO进行多目标优化。</p><p>PlatEMO的特色主要有以下几点：</p><ul><li>50+的开源优化算法，包括常用的NSGA-II、GDE3及MOEA-D等等</li><li>100+的开源多目标优化测试例题，包括常用的ZDT系列、DTLZ系列及WFG系列</li><li>可以通过界面完成优化实验</li><li>可以一键导出优化结果至Excel以及Latex</li><li>目前始终在维护并不断地有新算法的添加</li><li>Matlab开发对于数据有丰富的展现形式</li></ul><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/b42011337bb86c4644297347447a4067.jpeg" alt="PlatEMO GUI"></p><p>BIMK上PlatEMO的主页链接：<a href="http://bimk.ahu.edu.cn/12957/list.htm" target="_blank" rel="noopener">http://bimk.ahu.edu.cn/12957/list.htm</a></p><p>PlatEMO Github主页：<a href="https://github.com/BIMK/PlatEMO，主页介绍中有QQ群联系方式，入门级别的一些中文资料可参考：https://blog.csdn.net/qq_40434430/article/details/88366639以及该博主所发布的其它关于PaltEMO的文章。" target="_blank" rel="noopener">https://github.com/BIMK/PlatEMO，主页介绍中有QQ群联系方式，入门级别的一些中文资料可参考：https://blog.csdn.net/qq_40434430/article/details/88366639以及该博主所发布的其它关于PaltEMO的文章。</a></p><p>PlatEMO综述文章：*<u>Tian Y, Cheng R, Zhang X, et al. PlatEMO: A MATLAB platform for evolutionary multi-objective optimization[J]. IEEE Computational Intelligence Magazine, 2017, 12(4): 73-87.</u>*</p><h5 id="Jmetal"><a href="#Jmetal" class="headerlink" title="Jmetal"></a>Jmetal</h5><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/37f21eabd4d779cf472039d4d90c7c94.jpeg" alt="Jmetal Logo"></p><p>Jmetal是一个优秀的启发式算法（包含进化算法）开源框架，Github项目主页为<a href="https://github.com/jMetal。当前Jmetal已经进入了Jmetal5.0时代了。Jmetal框架成熟，同样也是适用于作为优化算法的测试以及二次开发的原始框架。Jmetal项目中包含了对最初的Java版本的全面介绍。虽然这些介绍十分精简，但对于深入理解Jemtal" target="_blank" rel="noopener">https://github.com/jMetal。当前Jmetal已经进入了Jmetal5.0时代了。Jmetal框架成熟，同样也是适用于作为优化算法的测试以及二次开发的原始框架。Jmetal项目中包含了对最初的Java版本的全面介绍。虽然这些介绍十分精简，但对于深入理解Jemtal</a> 的设计思路是有益的。</p><p>Jmetal的特点主要有以下几点：</p><ul><li>Jmetal分支众多，包含java版本、python版本以及c++版本</li><li>30+的优化算法，包含单目标、多目标优化</li><li>除常用ZDT系列等例题，还包含CEC2009、CEC2018等优化竞赛例题</li><li>目前始终在维护并不断地有新算法的添加</li><li>变量编码形式较多</li><li>版本模块化很强易开发，且有着很好的性能</li></ul><p>遗憾的是Jmetal当前并没有GUI界面，这对于想要使用这一优化工具的新手来说显得有一点不友好，但好在Jemtal版本有着较为详细的配置手册（限于Java\python版本），且python版本借助于所在平台可以干很多可视化的事。下图例：</p><p><img src="https://github.com/jMetal/jMetalPy/raw/master/docs/source/chordplot.gif" alt="Jmetal-py visualization"></p><p>Jmetal5（java）的介绍主页：<a href="http://jmetal.github.io/jMetal/" target="_blank" rel="noopener">http://jmetal.github.io/jMetal/</a> （Jmetal开发者连网页代码都开源了==）</p><p>Jmetal-cpp的介绍主页：<a href="http://jmetalcpp.sourceforge.net/" target="_blank" rel="noopener">http://jmetalcpp.sourceforge.net/</a></p><p>Jmetal-Py的综述文章：*<u>Benitez-Hidalgo A, Nebro A J, Garcia-Nieto J, et al. jMetalPy: a Python Framework for Multi-Objective Optimization with Metaheuristics[J]. arXiv preprint arXiv:1903.02915, 2019.</u>*</p><h5 id="MOEA-FRAMEWORK"><a href="#MOEA-FRAMEWORK" class="headerlink" title="MOEA FRAMEWORK"></a>MOEA FRAMEWORK</h5><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/68bc22ff1d24662ea09272428a4ff1a5.jpeg" alt="MOEA Framework Logo"></p><p>MOEA Framework（以下简称MOEA）框架是David Hadka等人开发的一款开源Java优化框架。MOEA也是为多目标优化而开发，但同时也是包含许多单目标优化算法的，它的特性总结起来有以下几点：</p><ul><li>40+的开源优化算法（有些是从jmetal和pisa等拿过来的），常用的测试例题</li><li>易扩展性</li><li>并行支持好，无需进行并行代码的编写</li><li>内含有丰富的测试算法的工具</li><li>为企业提供专业支持</li><li>比较详细的使用文档</li></ul><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/08a8a750f30456fea5c75a856835e694.jpeg" alt="MOEA GUI"></p><p>如果当前你的计算机带有JDK（可以打开java文件），可以运行MOEA给的运行实例（主页右侧），感受一下。</p><p>MOEA的主页链接：<a href="http://moeaframework.org/" target="_blank" rel="noopener">http://moeaframework.org/</a></p><p>MOEA的Github链接：<a href="https://github.com/MOEAFramework" target="_blank" rel="noopener">https://github.com/MOEAFramework</a></p><h5 id="其它一些不再更新的多目标优化框架"><a href="#其它一些不再更新的多目标优化框架" class="headerlink" title="其它一些不再更新的多目标优化框架"></a>其它一些不再更新的多目标优化框架</h5><ol><li><p>PISA (<a href="https://sop.tik.ee.ethz.ch/pisa/" target="_blank" rel="noopener">https://sop.tik.ee.ethz.ch/pisa/</a>)</p><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/ed0610a9aba5e92763a4356ce6a58ecf.jpeg" alt="PISA Logo"></p><p>PISA是苏黎世联邦理工学院ETH Zurich的Eckart Zitzler教授领导开发的一款多目标优化框架。熟悉进化算法理论的应该知道Zitzler是个大牛，不过目前他已从ETH Zurich离开，PISA由其他人接手。PISA在功能性上还可以，但是对于初学者来说，它的配置“过于复杂”了。从它的Bug日志来看，PISA也似乎有几年没有更新维护了，因而这个项目可能也终止了。</p></li><li><p>OTL (<a href="https://github.com/O-T-L" target="_blank" rel="noopener">https://github.com/O-T-L</a>)</p><p>![](C:\Users\Hugh\Desktop\OTL Logo.jpeg)</p><p>OTL诞生于国内进化算法研究专家郑金华老师的实验室。OTL目前似乎是不再继续维护了，而且平台采用C++和Python混合编程搭建，对初学者有一定的门槛要求，尽管提供了安装教程，但涉及到boost以及CMake等的配置，所以本文不对该框架进行过多描述了，有兴趣的可访问Github主页访问，其中附有一篇OTL综述文献可供参考学习。</p></li><li><p>OPT4J  （<a href="http://opt4j.sourceforge.net/）" target="_blank" rel="noopener">http://opt4j.sourceforge.net/）</a></p><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/e4899adbfe85c25184e1b62a70a8b49d.jpeg" alt="OPT4J Logo"></p><p>OPT4J 是一个开源的基于java的进化计算框架。它包含SPEA2、NSGA2、差分进化、粒子群优化和模拟退火等常用算法。基准测试集包括ZDT、DTL、WFG和背包问题。OPT4J 为配置提供图形用户界面以及优化过程的可视化。可惜当前最新Release停留在2015年。</p></li><li><p>Watchmaker Framework （<a href="https://watchmaker.uncommons.org/index.php）" target="_blank" rel="noopener">https://watchmaker.uncommons.org/index.php）</a></p><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/ffd5bc459bd97352aea106499d5c88cf.jpeg" alt="Watchmaker Framework Logo"></p><p>watchmaker是一个基于Java开发的多目标优化框架，由个人开发者负责。它具有可视化优化过程，并行支持等特性，但是主要以遗传算法为主，当前Github上的最后一次commit是2017年，对于主体代码的维护似乎不再支持。主页上提供了比较全面的API说明，使用手册。感兴趣的可以自行了解。</p></li><li><p>ParadisEO（<a href="http://paradiseo.gforge.inria.fr/index.php）" target="_blank" rel="noopener">http://paradiseo.gforge.inria.fr/index.php）</a></p><p><img src="https://raw.githubusercontent.com/hughdj/hughfigurebed/master/img/11fa06e0fc77517bad9ca95261942cd4.jpeg" alt="ParadisEO Logo"></p><p>ParadisEO是一个基于c++开发的多目标优化框架，有着很好的设计理念，可以在windows、Linux以及macos上运行。其中包含一些常用的算法与测试例题。当前events更新到2012年，所以应该也是不再维护了。</p></li></ol><p>至此，本文介绍了一些优化框架，后续可能会带来更多的文章，敬请关注。感谢您的阅读！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;优化无处不在，无论你是不是从事优化研究，你都或多或少地面临研究模型优化问题。解决优化问题的算法被统称为优化算法，但优化算法的类型是非常多的。在机器学习中，大家都十分熟悉梯度下降法，在物理模型优化中，大家都熟悉牛顿法，而这些都是较为传统的优化算法了。随着模型越来越复杂，优化目
      
    
    </summary>
    
    
  </entry>
  
</feed>
